// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://challenge:uYuMturLtSasyUig@cluster0.v8ikp.mongodb.net/v2?retryWrites=true&w=majority"
}

model User {
  id                                                 String                         @id @default(auto()) @map("_id") @db.ObjectId
  firstName                                          String
  lastName                                           String
  email                                              String                         @unique
  githubId                                           String
  ministry                                           String
  archived                                           Boolean                        @default(false)
  created                                            DateTime                       @default(now())
  lastSeen                                           DateTime                       @updatedAt
  privateCloudProjectOwner                           PrivateCloudProject[]          @relation("projectOwner")
  privateCloudProjectPrimaryTechnicalLead            PrivateCloudProject[]          @relation("primaryTechnicalLead")
  privateCloudProjectSecondaryTechnicalLead          PrivateCloudProject[]          @relation("secondaryTechnicalLead")
  privateCloudRequestedProjectOwner                  PrivateCloudRequestedProject[] @relation("requestedProjectOwner")
  privateCloudRequestedProjectPrimaryTechnicalLead   PrivateCloudRequestedProject[] @relation("requestedPrimaryTechnicalLead")
  privateCloudRequestedProjectSecondaryTechnicalLead PrivateCloudRequestedProject[] @relation("requestedSecondaryTechnicalLead")
}

model PrivateCloudRequest {
  id                 String                       @id @default(auto()) @map("_id") @db.ObjectId
  createdByEmail     String
  decisionMakerEmail String?
  type               String
  status             String
  active             Boolean                      @default(true)
  created            DateTime                     @default(now())
  decisionDate       DateTime?
  projectId          String?                      @db.ObjectId
  project            PrivateCloudProject?         @relation("project", fields: [projectId], references: [id])
  requestedProjectId String                       @unique @db.ObjectId
  requestedProject   PrivateCloudRequestedProject @relation("requestedProject", fields: [requestedProjectId], references: [id])
}

model PrivateCloudProject {
  id                       String                @id @default(auto()) @map("_id") @db.ObjectId
  name                     String
  description              String
  status                   String
  licencePlate             String                @unique
  archived                 Boolean
  created                  DateTime              @default(now())
  projectOwnerId           String                @db.ObjectId
  projectOwner             User                  @relation("projectOwner", fields: [projectOwnerId], references: [id])
  primaryTechnicalLeadId   String                @db.ObjectId
  primaryTechnicalLead     User                  @relation("primaryTechnicalLead", fields: [primaryTechnicalLeadId], references: [id])
  secondaryTechnicalLeadId String?               @db.ObjectId
  secondaryTechnicalLead   User?                 @relation("secondaryTechnicalLead", fields: [secondaryTechnicalLeadId], references: [id])
  ministry                 String
  cluster                  String
  productionQuota          Quota
  testQuota                Quota
  developmentQuota         Quota
  toolsQuota               Quota
  commonComponents         CommonComponents
  requests                 PrivateCloudRequest[] @relation("project")
  profileId                String?               
}

model PrivateCloudRequestedProject {
  id                       String               @id @default(auto()) @map("_id") @db.ObjectId
  name                     String
  description              String
  status                   String
  licencePlate             String
  archived                 Boolean
  created                  DateTime             @default(now())
  projectOwnerId           String               @db.ObjectId
  projectOwner             User                 @relation("requestedProjectOwner", fields: [projectOwnerId], references: [id])
  primaryTechnicalLeadId   String               @db.ObjectId
  primaryTechnicalLead     User                 @relation("requestedPrimaryTechnicalLead", fields: [primaryTechnicalLeadId], references: [id])
  secondaryTechnicalLeadId String?              @db.ObjectId
  secondaryTechnicalLead   User?                @relation("requestedSecondaryTechnicalLead", fields: [secondaryTechnicalLeadId], references: [id])
  ministry                 String
  cluster                  String
  productionQuota          Quota
  testQuota                Quota
  developmentQuota         Quota
  toolsQuota               Quota
  commonComponents         CommonComponents
  requestedProject         PrivateCloudRequest? @relation("requestedProject")
}

type Quota {
  cpuRequests     Float @default(0.5)
  cpuLimits       Float @default(1.5)
  memoryRequests  Int   @default(2)
  memoryLimits    Int   @default(4)
  storageBlock    Int   @default(1)
  storageFile     Int   @default(1)
  storageBackup   Int   @default(512)
  storageCapacity Int   @default(1)
  storagePvcCount Int   @default(5)
  snapshotCount   Int   @default(5)
}

type CommonComponents {
  addressAndGeolocation              String?
  workflowManagement                 String?
  formDesignAndSubmission            String?
  identityManagement                 String?
  paymentServices                    String?
  documentManagement                 String?
  endUserNotificationAndSubscription String?
  publishing                         String?
  businessIntelligence               String?
  other                              String?
}
