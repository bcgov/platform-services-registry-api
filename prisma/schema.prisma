// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://challenge:uYuMturLtSasyUig@cluster0.v8ikp.mongodb.net/v2?retryWrites=true&w=majority"
}

model User {
  id                                        String                @id @default(auto()) @map("_id") @db.ObjectId
  firstName                                 String
  lastName                                  String
  email                                     String                @unique
  githubId                                  String
  ministry                                  String
  archived                                  Boolean               @default(false)
  created                                   DateTime              @default(now())
  lastSeen                                  DateTime              @updatedAt
  privateCloudProjectOwner                  PrivateCloudProject[] @relation("projectOwner")
  privateCloudProjectPrimaryTechnicalLead   PrivateCloudProject[] @relation("primaryTechnicalLead")
  privateCloudProjectSecondaryTechnicalLead PrivateCloudProject[] @relation("secondaryTechnicalLead")
  privateCloudRequestProjectOwner           PrivateCloudRequest[] @relation("requestProjectOwner")
  privateCloudRequestPrimaryTechnicalLead   PrivateCloudRequest[] @relation("requestPrimaryTechnicalLead")
  privateCloudRequestSecondaryTechnicalLead PrivateCloudRequest[] @relation("requestSecondaryTechnicalLead")
}

model PrivateCloudRequest {
  id                       String                     @id @default(auto()) @map("_id") @db.ObjectId
  createdByEmail           String
  decisionMakerEmail       String?
  projectOwnerId           String                     @db.ObjectId
  projectOwner             User                       @relation("requestProjectOwner", fields: [projectOwnerId], references: [id])
  primaryTechnicalLeadId   String                     @db.ObjectId
  primaryTechnicalLead     User                       @relation("requestPrimaryTechnicalLead", fields: [primaryTechnicalLeadId], references: [id])
  secondaryTechnicalLeadId String?                    @db.ObjectId
  secondaryTechnicalLead   User?                      @relation("requestSecondaryTechnicalLead", fields: [secondaryTechnicalLeadId], references: [id])
  type                     String
  status                   String
  active                   Boolean                    @default(true)
  created                  DateTime                   @default(now())
  decisionDate             DateTime?
  projectId                String?                    @unique @db.ObjectId
  project                  PrivateCloudProject?       @relation("requestProject", fields: [projectId], references: [id])
  requestedProject         PrivateCloudProjectEmbeded
}

model PrivateCloudProject {
  id                       String               @id @default(auto()) @map("_id") @db.ObjectId
  name                     String
  licencePlate             String
  archived                 Boolean
  created                  DateTime             @default(now())
  createdByEmail           String
  description              String
  status                   String
  projectOwnerId           String               @db.ObjectId
  projectOwner             User                 @relation("projectOwner", fields: [projectOwnerId], references: [id])
  primaryTechnicalLeadId   String               @db.ObjectId
  primaryTechnicalLead     User                 @relation("primaryTechnicalLead", fields: [primaryTechnicalLeadId], references: [id])
  secondaryTechnicalLeadId String               @db.ObjectId
  secondaryTechnicalLead   User                 @relation("secondaryTechnicalLead", fields: [secondaryTechnicalLeadId], references: [id])
  ministry                 String
  cluster                  String
  productionQuota          Quota
  testQuota                Quota
  developmentQuota         Quota
  toolsQuota               Quota
  commonComponents         CommonComponents
  request                  PrivateCloudRequest? @relation("requestProject")
}

model ArchivedPrivateCloudRequest {
  id                       String                     @id @default(auto()) @map("_id") @db.ObjectId
  createdById              String                     @unique @db.ObjectId
  decisionMakerId          String                     @unique @db.ObjectId
  projectOwnerId           String                     @db.ObjectId
  primaryTechnicalLeadId   String                     @db.ObjectId
  secondaryTechnicalLeadId String                     @db.ObjectId
  type                     String
  status                   String
  active                   Boolean
  created                  DateTime                   @default(now())
  decisionDate             DateTime
  projectId                String
  requestedProject         PrivateCloudProjectEmbeded
}

type PrivateCloudProjectEmbeded {
  name                        String
  licencePlate                String
  archived                    Boolean          @default(false)
  created                     DateTime         @default(now())
  createdByEmail              String
  description                 String
  projectOwnerEmail           String
  primaryTechnicalLeadEmail   String
  secondaryTechnicalLeadEmail String
  ministry                    String
  cluster                     String
  productionQuota             Quota
  testQuota                   Quota
  developmentQuota            Quota
  toolsQuota                  Quota
  commonComponents            CommonComponents
}

type Quota {
  cpuRequests     Float @default(0.5)
  cpuLimits       Float @default(1.5)
  memoryRequests  Int   @default(2)
  memoryLimits    Int   @default(4)
  storageBlock    Int   @default(1)
  storageFile     Int   @default(1)
  storageBackup   Int   @default(512)
  storageCapacity Int   @default(1)
  storagePvcCount Int   @default(5)
  snapshotCount   Int   @default(5)
}

type CommonComponents {
  addressAndGeolocation              String?
  workflowManagement                 String?
  formDesignAndSubmission            String?
  identityManagement                 String?
  paymentServices                    String?
  documentManagement                 String?
  endUserNotificationAndSubscription String?
  publishing                         String?
  businessIntelligence               String?
  other                              String?
}
